{"version":3,"sources":["component/Features/LookValutes/index.tsx","component/UI/Atoms/Input.tsx","component/Features/ConventersFilds/Organisms/index.tsx","component/Features/ConventersFilds/Templates/index.tsx","component/Pages/Conventer/index.tsx","component/UI/Atoms/Button/index.tsx"],"names":["LookValutes","currentValutes","useSelector","state","valutesReducer","isSelectValuteActive","isSelectValutePasive","ccy","Number","sale","toFixed","Input","type","inputProps","value","onChange","placeholder","color","TextField","RowConvertValute","valuteCCY","valutes","classMenuOne","classMenuTwo","setClassForMenu","classesForDiv","className","min","onClick","classesModeTwo","setClasses","classesModeOne","includes","splice","index","indexOf","join","ConventersFields","useState","classesActive","setClassesActive","classesPasive","setClassesPasive","inputValueResultActive","setInputValueResultActive","inputValueResultPasive","setInputValueResultPasive","inputValueChange","inputText","inputNumber","dispatch","useDispatch","selectValutes","item","selectName","onSelectValutes","classesMode","itemOfConditionActive","itemOfConditionPasive","selectValutesOne","selectValutesTwo","signOfValutesPasive","map","Actions","selectCurrentValutes","selectViseValutes","key","signOfValutesActive","useEffect","String","e","currentTarget","to","Button","variant","content"],"mappings":"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","file":"static/js/4.ffb9ad7e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../../stateManager/redux-store'\r\n\r\nexport const LookValutes = () => {\r\n\tconst currentValutes = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.currentValutes\r\n\t)\r\n\r\n\tlet isSelectValuteActive = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.isSelectValuteActive\r\n\t)\r\n\r\n\tlet isSelectValutePasive = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.isSelectValutePasive\r\n\t)\r\n\tif (currentValutes) {\r\n\t\tif (!isSelectValuteActive)\r\n\t\t\tisSelectValuteActive = currentValutes[0]\r\n\t\tif (!isSelectValutePasive)\r\n\t\t\tisSelectValutePasive = currentValutes[1]\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span>\r\n\t\t\t1 {isSelectValuteActive?.ccy} ={' '}\r\n\t\t\t{isSelectValuteActive?.ccy === 'BTC'\r\n\t\t\t\t? (\r\n\t\t\t\t\t\t(Number(isSelectValuteActive?.sale) *\r\n\t\t\t\t\t\t\tNumber(currentValutes![0].sale)) /\r\n\t\t\t\t\t\tNumber(isSelectValutePasive?.sale)\r\n\t\t\t\t  ).toFixed(2)\r\n\t\t\t\t: (\r\n\t\t\t\t\t\tNumber(isSelectValuteActive?.sale) /\r\n\t\t\t\t\t\tNumber(isSelectValutePasive?.sale)\r\n\t\t\t\t  ).toFixed(2)}{' '}\r\n\t\t\t{isSelectValutePasive?.ccy}\r\n\t\t</span>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\ntype PropsType = {\r\n\ttype: string\r\n\tinputProps: any\r\n\tvalue: string\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n\tplaceholder: string\r\n\tcolor: 'primary' | 'secondary' | undefined\r\n}\r\n\r\nexport const Input: React.FC<PropsType> = ({\r\n\ttype,\r\n\tinputProps,\r\n\tvalue,\r\n\tonChange,\r\n\tplaceholder,\r\n\tcolor,\r\n}) => {\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\ttype={type}\r\n\t\t\tinputProps={inputProps}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tcolor={color}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { useState, SetStateAction } from 'react'\r\nimport {Input} from '../../../UI/Atoms/Input'\r\nimport './style.sass'\r\n\r\ntype PropsType = {\r\n    value: string\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    valuteCCY: string | undefined\r\n    valutes: any\r\n    classMenuOne: string[],\r\n    classMenuTwo: string[],\r\n    setClassForMenu: (value: SetStateAction<string[]>) => void\r\n    classesForDiv: string[]\r\n}\r\nexport const RowConvertValute:React.FC<PropsType> = ({value, onChange, valuteCCY, valutes, classMenuOne, classMenuTwo, setClassForMenu, classesForDiv}) => {\r\n\r\n\r\n    const toggleMenu = (\r\n\t\tclassesModeOne: string[],\r\n\t\tclassesModeTwo: string[],\r\n\t\tsetClasses: (\r\n\t\t\tvalue: React.SetStateAction<string[]>\r\n\t\t) => void\r\n\t) => {\r\n\t\tclassesModeOne.includes('open') &&\r\n\t\t\tclassesModeOne.splice(1, 1)\r\n\t\tsetClasses(() => {\r\n\t\t\tlet index = classesModeTwo.indexOf('open')\r\n\t\t\treturn index > -1\r\n\t\t\t\t? classesModeTwo.splice(index - 1, 1)\r\n\t\t\t\t: [...classesModeTwo, 'open']\r\n\t\t})\r\n    }\r\n    \r\n\r\n    return (\r\n       <>\r\n                <div className=\"form-col\">\r\n                    <div className='valute_number'>\r\n                        <Input\r\n                            type={'number'}\r\n                            inputProps={{ min: '0' }}\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            color={'secondary'}\r\n                            placeholder={'valute'}\r\n                        />\r\n                    </div>\r\n                    <div className='valute_sign'>\r\n                        <ul className='valute-list'>\r\n                            <span\r\n                                onClick={() =>\r\n                                    toggleMenu(\r\n                                        classMenuOne,\r\n                                        classMenuTwo,\r\n                                        setClassForMenu\r\n                                    )\r\n                                }\r\n                            >\r\n                                {valuteCCY}\r\n                            </span>\r\n                            <div className={classesForDiv.join(' ')}>\r\n                                {valutes}\r\n                            </div>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n       </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Input } from '../../../UI/Atoms/Input'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppStateType } from '../../../../stateManager/redux-store'\r\nimport { getValutesAPIType } from '../../../../api/api'\r\nimport {\r\n\tActionsType,\r\n\tActions,\r\n} from '../../../../stateManager/valutes-reducer'\r\nimport { Preloader } from '../../../UI/Atoms/Preloader/preloader'\r\nimport './style.sass'\r\nimport { RowConvertValute } from '../Organisms/index'\r\n\r\nexport const ConventersFields = () => {\r\n\t/* ===UseState=== */\r\n\r\n\tlet [classesActive, setClassesActive] = useState<\r\n\t\tstring[]\r\n\t>(['valute-list_wrapper'])\r\n\tlet [classesPasive, setClassesPasive] = useState<\r\n\t\tstring[]\r\n\t>(['valute-list_wrapper'])\r\n\tlet [\r\n\t\tinputValueResultActive,\r\n\t\tsetInputValueResultActive,\r\n\t] = useState<string>('1')\r\n\tlet [\r\n\t\tinputValueResultPasive,\r\n\t\tsetInputValueResultPasive,\r\n\t] = useState<string>('1')\r\n\r\n\tconst inputValueChange = (\r\n\t\tinputText: string,\r\n\t\tinputNumber: string\r\n\t) => {\r\n\t\tsetInputValueResultActive(inputText)\r\n\t\tsetInputValueResultPasive(inputNumber)\r\n\t}\r\n\r\n\t/* ===UseSelector=== */\r\n\tconst currentValutes = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.currentValutes\r\n\t)\r\n\tlet isSelectValuteActive = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.isSelectValuteActive\r\n\t)\r\n\tlet isSelectValutePasive = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.isSelectValutePasive\r\n\t)\r\n\t/* ===UseDispatch=== */\r\n\tconst dispatch = useDispatch()\r\n\r\n\tif (currentValutes) {\r\n\t\tif (!isSelectValuteActive)\r\n\t\t\tisSelectValuteActive = currentValutes[0]\r\n\t\tif (!isSelectValutePasive)\r\n\t\t\tisSelectValutePasive = currentValutes[1]\r\n\t}\r\n\r\n\tconst selectValutes = (\r\n\t\titem: getValutesAPIType | null,\r\n\t\tselectName: (\r\n\t\t\titem: getValutesAPIType | null\r\n\t\t) => ActionsType\r\n\t) => {\r\n\t\treturn dispatch(selectName(item))\r\n\t}\r\n\r\n\tconst onSelectValutes = (\r\n\t\tclassesMode: string[],\r\n\t\titemOfConditionActive: getValutesAPIType | null,\r\n\t\titemOfConditionPasive: getValutesAPIType | null,\r\n\t\tsetClasses: (\r\n\t\t\tvalue: React.SetStateAction<string[]>\r\n\t\t) => void,\r\n\t\tselectValutesOne: (\r\n\t\t\titem: getValutesAPIType | null\r\n\t\t) => ActionsType,\r\n\t\tselectValutesTwo: (\r\n\t\t\titem: getValutesAPIType | null\r\n\t\t) => ActionsType\r\n\t) => {\r\n\t\treturn () => {\r\n\t\t\tselectValutes(itemOfConditionActive, selectValutesOne)\r\n\t\t\tselectValutes(itemOfConditionPasive, selectValutesTwo)\r\n\t\t\tsetClasses(() => {\r\n\t\t\t\tlet index = classesMode.indexOf('open')\r\n\t\t\t\treturn index > -1\r\n\t\t\t\t\t? classesMode.splice(index - 1, 1)\r\n\t\t\t\t\t: classesMode\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst signOfValutesPasive = currentValutes?.map(\r\n\t\t(item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName='list-item'\r\n\t\t\t\t\tonClick={onSelectValutes(\r\n\t\t\t\t\t\tclassesPasive,\r\n\t\t\t\t\t\titem?.ccy === isSelectValuteActive?.ccy\r\n\t\t\t\t\t\t\t? isSelectValutePasive\r\n\t\t\t\t\t\t\t: isSelectValuteActive,\r\n\t\t\t\t\t\titem?.ccy === isSelectValuteActive?.ccy\r\n\t\t\t\t\t\t\t? isSelectValuteActive\r\n\t\t\t\t\t\t\t: item,\r\n\t\t\t\t\t\tsetClassesPasive,\r\n\t\t\t\t\t\tActions.selectCurrentValutes,\r\n\t\t\t\t\t\tActions.selectViseValutes\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tkey={item.ccy}\r\n\t\t\t\t>\r\n\t\t\t\t\t{item.ccy}\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tconst signOfValutesActive = currentValutes?.map(\r\n\t\t(item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName='list-item'\r\n\t\t\t\t\tonClick={onSelectValutes(\r\n\t\t\t\t\t\tclassesActive,\r\n\t\t\t\t\t\titem?.ccy === isSelectValutePasive?.ccy\r\n\t\t\t\t\t\t\t? isSelectValutePasive\r\n\t\t\t\t\t\t\t: item,\r\n\t\t\t\t\t\titem?.ccy === isSelectValutePasive?.ccy\r\n\t\t\t\t\t\t\t? isSelectValuteActive\r\n\t\t\t\t\t\t\t: isSelectValutePasive,\r\n\t\t\t\t\t\tsetClassesActive,\r\n\t\t\t\t\t\tActions.selectCurrentValutes,\r\n\t\t\t\t\t\tActions.selectViseValutes\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tkey={item.ccy}\r\n\t\t\t\t>\r\n\t\t\t\t\t{item.ccy}\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tconst OnActiveInputChange = (\r\n\t\te: React.ChangeEvent<HTMLInputElement>\r\n\t) => {\r\n\t\tisSelectValuteActive?.ccy === 'BTC'\r\n\t\t\t? inputValueChange(\r\n\t\t\t\t\te.currentTarget.value,\r\n\t\t\t\t\tString(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tNumber(e.currentTarget.value) *\r\n\t\t\t\t\t\t\t((Number(isSelectValuteActive?.sale) *\r\n\t\t\t\t\t\t\t\tNumber(currentValutes![0].sale)) /\r\n\t\t\t\t\t\t\t\tNumber(isSelectValutePasive?.sale))\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t\t)\r\n\t\t\t  )\r\n\t\t\t: inputValueChange(\r\n\t\t\t\t\te.currentTarget.value,\r\n\t\t\t\t\tString(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(Number(isSelectValuteActive?.sale) /\r\n\t\t\t\t\t\t\t\tNumber(isSelectValutePasive?.sale)) *\r\n\t\t\t\t\t\t\tNumber(e.currentTarget.value)\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t\t)\r\n\t\t\t  )\r\n\t}\r\n\r\n\tconst OnPasiveInputChange = (\r\n\t\te: React.ChangeEvent<HTMLInputElement>\r\n\t) => {\r\n\t\tisSelectValutePasive?.ccy === 'BTC'\r\n\t\t\t? inputValueChange(\r\n\t\t\t\t\tString(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(Number(e.currentTarget.value) *\r\n\t\t\t\t\t\t\t\t(Number(isSelectValutePasive?.sale) *\r\n\t\t\t\t\t\t\t\t\tNumber(currentValutes![0].sale))) /\r\n\t\t\t\t\t\t\tNumber(isSelectValuteActive?.sale)\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t\t),\r\n\t\t\t\t\te.currentTarget.value\r\n\t\t\t  )\r\n\t\t\t: inputValueChange(\r\n\t\t\t\t\tString(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(Number(isSelectValutePasive?.sale) /\r\n\t\t\t\t\t\t\t\tNumber(isSelectValuteActive?.sale)) *\r\n\t\t\t\t\t\t\tNumber(e.currentTarget.value)\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t\t),\r\n\t\t\t\t\te.currentTarget.value\r\n\t\t\t  )\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInputValueResultPasive(\r\n\t\t\tisSelectValuteActive?.ccy === 'BTC'\r\n\t\t\t\t? String(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(Number(inputValueResultActive) *\r\n\t\t\t\t\t\t\t\t(Number(isSelectValuteActive?.sale) *\r\n\t\t\t\t\t\t\t\t\tNumber(currentValutes![0].sale))) /\r\n\t\t\t\t\t\t\tNumber(isSelectValutePasive?.sale)\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t  )\r\n\t\t\t\t: String(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(Number(isSelectValuteActive?.sale) /\r\n\t\t\t\t\t\t\t\tNumber(isSelectValutePasive?.sale)) *\r\n\t\t\t\t\t\t\tNumber(inputValueResultActive)\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t  )\r\n\t\t)\r\n\t}, [currentValutes,\r\n\t\tisSelectValuteActive,\r\n\t\tisSelectValutePasive,\r\n\t])\r\n\r\n\tif(!currentValutes) return <Preloader />\r\n\treturn (\r\n\t\t<div className='conventer-form_wrapper'>\r\n\t\t\t<RowConvertValute classesForDiv={classesActive} classMenuOne={classesPasive} classMenuTwo={classesActive} setClassForMenu={setClassesActive} value={inputValueResultActive} onChange={OnActiveInputChange} valuteCCY={isSelectValuteActive?.ccy} valutes={signOfValutesActive}/>\r\n\t\t\t<RowConvertValute classesForDiv={classesPasive} classMenuOne={classesActive} classMenuTwo={classesPasive} setClassForMenu={setClassesPasive} value={inputValueResultPasive} onChange={OnPasiveInputChange} valuteCCY={isSelectValutePasive?.ccy} valutes={signOfValutesPasive}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AppStateType } from '../../../stateManager/redux-store'\r\nimport { useSelector } from 'react-redux'\r\nimport { LookValutes } from '../../Features/LookValutes'\r\nimport  {ConventersFields} from '../../Features/ConventersFilds/Templates/index'\r\nimport { Button } from '../../UI/Atoms/Button'\r\nimport './../../Features/ConventersFilds/Templates/style.sass'\r\nimport '././../../UI/Atoms/Button/style.sass'\r\nimport { Preloader } from '../../UI/Atoms/Preloader/preloader'\r\n\r\nexport default() => {\r\n\tconst currentValutes = useSelector(\r\n\t\t(state: AppStateType) =>\r\n\t\t\tstate.valutesReducer.currentValutes\r\n\t)\r\n\r\n\tif (!currentValutes) return <Preloader />\r\n\r\n\treturn (\r\n\t\t<div className='conventerValutesPage'>\r\n\t\t\t<NavLink to='/currentCurses'>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\tcolor={'secondary'}\r\n\t\t\t\t\tcontent={'Current Valutes'}\r\n\t\t\t\t/>\r\n\t\t\t</NavLink>\r\n\t\t\t<div className='conventer-form'>\r\n\t\t\t\t<div className='currentValue-valute'>\r\n\t\t\t\t\t<LookValutes />\r\n\t\t\t\t</div>\r\n\t\t\t\t<ConventersFields />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button as ButtonMU} from '@material-ui/core'\r\n\r\n\r\ntype PropsType = {\r\n    content: string\r\n    variant: \"text\" | \"outlined\" | \"contained\" | undefined\r\n    color: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined\r\n}\r\n\r\nexport const Button:React.FC<PropsType> = ({content, variant, color}) => {\r\n    return (\r\n        <ButtonMU variant={variant} color={color}>{content}</ButtonMU>\r\n    )\r\n}"],"sourceRoot":""}