{"version":3,"sources":["component/ConventorPage/conventerPage.tsx"],"names":["ConvertorPage","useState","classesActive","setClassesActive","classesPasive","setClassesPasive","inputValueResultActive","setInputValueResultActive","inputValueResultPasive","setInputValueResultPasive","currentValutes","useSelector","state","valutesReducer","isSelectValuteActive","isSelectValutePasive","dispatch","useDispatch","selectValutesActiveCB","useCallback","item","selectCurrentValutes","onSelectValutesActive","selectValutesPasiveCB","ccy","index","indexOf","splice","signOfValutesActive","map","className","onClick","key","selectViseValutes","onSelectValutesPasive","signOfValutesPasive","useEffect","String","Number","sale","toFixed","to","variant","color","type","inputProps","min","value","onChange","e","currentTarget","placeholder","includes","join"],"mappings":"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","file":"static/js/5.cfaa4675.chunk.js","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './conventerPage.sass'\r\nimport '././../common/button/button.sass'\r\nimport { AppStateType } from '../../stateManager/redux-store'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectCurrentValutes, selectViseValutes } from '../../stateManager/valutes-reducer'\r\nimport { getValutesAPIType } from '../../api/api'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nconst ConvertorPage: React.FC = () => {\r\n\r\n    /* ===UseState=== */\r\n    let [classesActive, setClassesActive] = useState<string[]>(['valute-list_wrapper'])\r\n    let [classesPasive, setClassesPasive] = useState<string[]>(['valute-list_wrapper'])\r\n    let [inputValueResultActive, setInputValueResultActive] = useState<string>('0')\r\n    let [inputValueResultPasive, setInputValueResultPasive] = useState('0')\r\n    /* ===UseSelector=== */\r\n    const currentValutes = useSelector((state: AppStateType) => state.valutesReducer.currentValutes)\r\n    let isSelectValuteActive = useSelector((state: AppStateType) => state.valutesReducer.isSelectValuteActive)\r\n    let isSelectValutePasive = useSelector((state: AppStateType) => state.valutesReducer.isSelectValutePasive)\r\n\r\n    /* ===UseDispatch=== */\r\n    const dispatch = useDispatch()\r\n\r\n    /* ===For Active Valutes=== */\r\n    const selectValutesActiveCB = useCallback((item: getValutesAPIType | null) => {\r\n        dispatch(selectCurrentValutes(item))\r\n    }, [dispatch])\r\n\r\n    const onSelectValutesActive = (item: getValutesAPIType | null) => {\r\n        return () => {\r\n            selectValutesPasiveCB(item?.ccy === isSelectValutePasive?.ccy ? isSelectValuteActive : isSelectValutePasive)\r\n            selectValutesActiveCB(item?.ccy === isSelectValutePasive?.ccy ? isSelectValutePasive : item)\r\n            setClassesActive(() => {\r\n                let index = classesActive.indexOf('open')\r\n                return index > -1 ? classesActive.splice(index - 1, 1) : classesActive\r\n            })\r\n        }\r\n    }\r\n\r\n    const toggleMenuActive = () => {\r\n        classesPasive.includes('open') && classesPasive.splice(1, 1)\r\n        setClassesActive(() => {\r\n            let index = classesActive.indexOf('open')\r\n            return index > -1 ? classesActive.splice(index - 1, 1) : [...classesActive, 'open']\r\n        })\r\n    }\r\n\r\n    let signOfValutesActive = currentValutes?.map(item => {\r\n        return <li className=\"list-item\" onClick={onSelectValutesActive(item)} key={item.ccy}>{item.ccy}</li>\r\n    })\r\n\r\n\r\n    const inputValueChangeActive = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValueResultActive(e.currentTarget.value)\r\n        setInputValueResultPasive(String((Number(isSelectValuteActive?.sale) / Number(isSelectValutePasive?.sale) * Number(e.currentTarget.value)).toFixed(2)))\r\n    }\r\n\r\n    /* ===For Pasive Valutes=== */\r\n    const selectValutesPasiveCB = useCallback((item: getValutesAPIType | null) => {\r\n        dispatch(selectViseValutes(item))\r\n    }, [dispatch])\r\n\r\n    const onSelectValutesPasive = (item: getValutesAPIType | null) => {\r\n\r\n        return () => {\r\n            selectValutesPasiveCB(item?.ccy === isSelectValuteActive?.ccy ? isSelectValuteActive : item)\r\n            selectValutesActiveCB(item?.ccy === isSelectValuteActive?.ccy ? isSelectValutePasive : isSelectValuteActive)\r\n            setClassesPasive(() => {\r\n                let index = classesPasive.indexOf('open')\r\n                return index > -1 ? classesPasive.splice(index - 1, 1) : classesPasive\r\n            })\r\n        }\r\n    }\r\n\r\n    const toggleMenuPasive = () => {\r\n        classesActive.includes('open') && classesActive.splice(1, 1)\r\n        setClassesPasive(() => {\r\n            let index = classesPasive.indexOf('open')\r\n            return index > -1 ? classesPasive.splice(index - 1, 1) : [...classesPasive, 'open']\r\n        })\r\n    }\r\n\r\n    let signOfValutesPasive = currentValutes?.map(item => {\r\n        return <li className=\"list-item\" onClick={onSelectValutesPasive(item)} key={item.ccy}>{item.ccy}</li>\r\n    })\r\n\r\n    const inputValueChangePasive = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValueResultPasive(e.currentTarget.value)\r\n        setInputValueResultActive(String((Number(isSelectValutePasive?.sale) / Number(isSelectValuteActive?.sale) * Number(e.currentTarget.value)).toFixed(2)))\r\n    }\r\n\r\n    if (currentValutes) {\r\n        if (!isSelectValuteActive) isSelectValuteActive = currentValutes[0]\r\n        if (!isSelectValutePasive) isSelectValutePasive = currentValutes[1]\r\n    }\r\n\r\n    useEffect(() => {\r\n        setInputValueResultPasive(String((Number(isSelectValuteActive?.sale) / Number(isSelectValutePasive?.sale) * Number(inputValueResultActive)).toFixed(2)))\r\n    }, [isSelectValutePasive?.ccy, isSelectValuteActive?.ccy])\r\n\r\n\r\n\r\n    if (!currentValutes) return <div>Loading...</div>\r\n\r\n    return (\r\n\r\n        <div className=\"conventerValutesPage\">\r\n            <NavLink to=\"/currentCurses\">\r\n                <Button variant=\"outlined\" color=\"secondary\">\r\n                    Current Valutes\r\n                </Button>\r\n            </NavLink>\r\n            <div className=\"conventer-form\">\r\n                <div className=\"currentValue-valute\">\r\n                    <span>1 {isSelectValuteActive?.ccy} = {((Number(isSelectValuteActive?.sale) / Number(isSelectValutePasive?.sale)).toFixed(2))} {isSelectValutePasive?.ccy}</span>\r\n                </div>\r\n                <div className=\"conventer-form_wrapper\">\r\n                    <div className=\"form-col form-col_active\">\r\n                        <div className=\"active-valute_number\">\r\n                            <TextField type=\"number\" inputProps={{ min: \"0\" }} value={inputValueResultActive} onChange={inputValueChangeActive} placeholder=\"valute\" color=\"secondary\" />\r\n                        </div>\r\n                        <div className=\"active-valute_sign\">\r\n                            <ul className=\"valute-list\">\r\n                                <span onClick={toggleMenuActive}>{isSelectValuteActive?.ccy}</span>\r\n                                <div className={classesActive.join(' ')}>{signOfValutesActive}</div>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-col form-col_pasive\">\r\n                        <div className=\"pasive-valute_number\">\r\n                            <TextField type=\"number\" inputProps={{ min: \"0\" }} value={inputValueResultPasive} onChange={inputValueChangePasive} color=\"secondary\" placeholder=\"valute\" />\r\n                        </div>\r\n                        <div className=\"pasive-valute_sign\">\r\n                            <ul className=\"valute-list\">\r\n                                <span onClick={toggleMenuPasive}>{isSelectValutePasive?.ccy}</span>\r\n                                <div className={classesPasive.join(' ')}>{signOfValutesPasive}</div>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConvertorPage"],"sourceRoot":""}